if syn_checkcaller() then
  local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/zerovectors/framework/master/source", true))()
  local mouse = game.Players.LocalPlayer:GetMouse();
  local UserInput = game:GetService("UserInputService")
  local farming = library:CreateWindow({
    text = "Farming"
  })
  local character = library:CreateWindow({
    text = "Character"
  })
  local teleports = library:CreateWindow({
    text = "Teleports"
  })
  local miscellaneous = library:CreateWindow({
    text = "Miscellaneous"
  })
  local pets = library:CreateWindow({
    text = "Pet Cheats"
  })
  local changelog = library:CreateWindow({
    text = "View Changelog"
  })

  local settings = {
    autofarm = false;
    autosell = false;
    autofarmcoins = false;
    logs = false;
    vis = false;
    vfly = false;
    noclip = false;
    flykey = "Enum.UserInputType.F";
    autobuysword = false;
    autobuybelts = false;
    autocollectsouls = false;
    autosellepic = false;
    autosellrare = false;
    autosellbasic = false;
    autosellbeast = false;
    autosellelite = false;
    autosellomega = false;
    autosellunique = false;
    autoselladvanced = false;
    autosellinfinity = false;
    autosellawakened = false;
    autosellskystorm = false;
    autocloneepic = false;
    autoclonerare = false;
    autoclonebasic = false;
    autoclonebeast = false;
    autocloneelite = false;
    autocloneomega = false;
    autocloneunique = false;
    autocloneadvanced = false;
    autocloneinfinity = false;
    autocloneawakened = false;
    autocloneskystorm = false;
    openeggs = false;
    autoevolve = false;
  }
  loadstring(game:HttpGet("https://pastebin.com/raw/xKbbAuc7"))() wait(.1)

  local credits = library:CreateWindow({text='Credits'})
  credits:AddLabel("Credits\nInori: Dragging\nwally: UI\nsmail: Ideas\nLogre#2373: Anti-Afk")

  farming:AddToggle("AutoFarm", function(state)
    if settings.autofarm == false then
      settings.autofarm = true
      while wait() do
        local tbl_main =
        {
              "swingKatana"
        }
        game:GetService("Players").LocalPlayer.ninjaEvent:FireServer(unpack(tbl_main))
        if settings.autofarm == false then
          break
        end
      end
    else
      settings.autofarm = false
    end
  end)

  vflyspeed = 1
  vehicleflyspeed = 1
  function sFLY(vfly)
  	repeat wait() until game.Players.LocalPlayer and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid')
  	repeat wait() until mouse

  	local T = game.Players.LocalPlayer.Character.HumanoidRootPart
  	local CONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
  	local lCONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
  	local SPEED = 0

  	local function FLY()
  		settings.vfly = true
  		local BG = Instance.new('BodyGyro', T)
  		local BV = Instance.new('BodyVelocity', T)
  		BG.P = 9e4
  		BG.maxTorque = Vector3.new(9e9, 9e9, 9e9)
  		BG.cframe = T.CFrame
  		BV.velocity = Vector3.new(0, 0, 0)
  		BV.maxForce = Vector3.new(9e9, 9e9, 9e9)
  		spawn(function()
  			repeat wait()
  			if not vfly then
  				game.Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').PlatformStand = true
  			end
  			if CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 or CONTROL.Q + CONTROL.E ~= 0 then
  				SPEED = 50
  			elseif not (CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 or CONTROL.Q + CONTROL.E ~= 0) and SPEED ~= 0 then
  				SPEED = 0
  			end
  			if (CONTROL.L + CONTROL.R) ~= 0 or (CONTROL.F + CONTROL.B) ~= 0 or (CONTROL.Q + CONTROL.E) ~= 0 then
  				BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (CONTROL.F + CONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(CONTROL.L + CONTROL.R, (CONTROL.F + CONTROL.B + CONTROL.Q + CONTROL.E) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
  				lCONTROL = {F = CONTROL.F, B = CONTROL.B, L = CONTROL.L, R = CONTROL.R}
  			elseif (CONTROL.L + CONTROL.R) == 0 and (CONTROL.F + CONTROL.B) == 0 and (CONTROL.Q + CONTROL.E) == 0 and SPEED ~= 0 then
  				BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (lCONTROL.F + lCONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(lCONTROL.L + lCONTROL.R, (lCONTROL.F + lCONTROL.B + CONTROL.Q + CONTROL.E) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
  			else
  				BV.velocity = Vector3.new(0, 0, 0)
  			end
  			BG.cframe = workspace.CurrentCamera.CoordinateFrame
  			until not settings.vfly
  			CONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
  			lCONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
  			SPEED = 0
  			BG:destroy()
  			BV:destroy()
  			game.Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').PlatformStand = false
  		end)
  	end
  	mouse.KeyDown:connect(function(KEY)
  		if KEY:lower() == 'w' then
  			if vfly then
  				CONTROL.F = vehicleflyspeed
  			else
  				CONTROL.F = vflyspeed
  			end
  		elseif KEY:lower() == 's' then
  			if vfly then
  				CONTROL.B = - vehicleflyspeed
  			else
  				CONTROL.B = - vflyspeed
  			end
  		elseif KEY:lower() == 'a' then
  			if vfly then
  				CONTROL.L = - vehicleflyspeed
  			else
  				CONTROL.L = - vflyspeed
  			end
  		elseif KEY:lower() == 'd' then
  			if vfly then
  				CONTROL.R = vehicleflyspeed
  			else
  				CONTROL.R = vflyspeed
              end
          elseif KEY:lower() == 'e' then
              if vfly then
                  CONTROL.Q = vehicleflyspeed*2
              else
                  CONTROL.Q = vflyspeed*2
              end
          elseif KEY:lower() == 'q' then
              if vfly then
                  CONTROL.E = -vehicleflyspeed*2
              else
                  CONTROL.E = -vflyspeed*2
              end
  		end
  	end)
  	mouse.KeyUp:connect(function(KEY)
  		if KEY:lower() == 'w' then
  			CONTROL.F = 0
  		elseif KEY:lower() == 's' then
  			CONTROL.B = 0
  		elseif KEY:lower() == 'a' then
  			CONTROL.L = 0
  		elseif KEY:lower() == 'd' then
              CONTROL.R = 0
          elseif KEY:lower() == 'e' then
              CONTROL.Q = 0
          elseif KEY:lower() == 'q' then
              CONTROL.E = 0
  		end
  	end)
  	FLY()
  end

  function NOFLY()
  	settings.vfly = false
  	game.Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').PlatformStand = false
  end

  farming:AddToggle("Auto Sell", function(state)
    if settings.autosell == false then
      settings.autosell = true
      while wait() do
        workspace.sellAreaCircles.sellAreaCircle13.circleInner.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
        if settings.autosell == false then
          workspace.sellAreaCircles.sellAreaCircle13.circleInner.CFrame = CFrame.new(77.047, 70272.242, 123.682)
          break
        end
      end
    else
      settings.autosell = false
    end
  end)

  farming:AddToggle("Collect Coins and Chi", function(state)
    if settings.autofarmcoins == false then
      settings.autofarmcoins = true
      local charpos = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
      while wait() do
        for i,v in pairs(workspace.spawnedCoins.Valley:GetChildren()) do
          game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame
        end
        if settings.autofarmcoins == false then
          game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = charpos
          break
        end
      end
    else
      settings.autofarmcoins = false
    end
  end)

  farming:AddToggle("Remove coin effects shit", function(state)
    if state then
      game.Players.LocalPlayer.PlayerGui.statEffectsGui.Enabled = false
      if game.Players.LocalPlayer.PlayerGui.gameGui:FindFirstChild("maxNinjitsuMenu") then
        game.Players.LocalPlayer.PlayerGui.gameGui.maxNinjitsuMenu.Parent = game.Players.LocalPlayer.PlayerGui
      end
    else
      game.Players.LocalPlayer.PlayerGui.statEffectsGui.Enabled = true
      game.Players.LocalPlayer.PlayerGui:WaitForChild("maxNinjitsuMenu").Parent = game.Players.LocalPlayer.PlayerGui.gameGui
    end
  end)

  farming:AddButton("Collect All Chests", function(state)
    local pos = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.ancientChest.circleInner.CFrame
    wait(.1)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.goldenZenChest.circleInner.CFrame
    wait(.1)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.goldenChest.circleInner.CFrame
    wait(.1)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.legendsChest.circleInner.CFrame
    wait(.1)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.eternalChest.circleInner.CFrame
    wait(.1)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.enchantedChest.circleInner.CFrame
    wait(.1)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.magmaChest.circleInner.CFrame
    wait(.1)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.midnightShadowChest.circleInner.CFrame
    wait(.1)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.mythicalChest.circleInner.CFrame
    wait(.1)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.enchantedChest.circleInner.CFrame
    wait(.1)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.saharaChest.circleInner.CFrame
    wait(.1)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.skystormMastersChest.circleInner.CFrame
    wait(.1)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.thunderChest.circleInner.CFrame
    wait(.1)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.ultraNinjitsuChest.circleInner.CFrame
    wait(.1)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.wonderChest.circleInner.CFrame
    wait(.1)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = pos
  end)

  character:AddToggle("Super Speed", function(state)
    game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = (state and 100 or 16)
  end)

  character:AddBox("WalkSpeed", function(object, focus)
    if focus then
        game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = tonumber(object.Text) or 16
    end
  end)

  character:AddToggle("Super Jump", function(state)
    game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = (state and 100 or 50)
  end)

  character:AddBox("JumpPower", function(object, focus)
    if focus then
        game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = tonumber(object.Text) or 50
    end
  end)

  character:AddToggle("Fly", function(state)
    if state then
      settings.vfly = true
      sFLY()
    else
      settings.vfly = false;
      NOFLY()
    end
  end)

  character:AddToggle("Noclip", function(state)
    if state then
      local function NoclipLoop()
        if settings.noclip == false and game.Players.LocalPlayer.Character ~= nil then
            for _, child in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
            if child:IsA("BasePart") and child.CanCollide == true then
                child.CanCollide = false
            end
          end
        end
      end
      Noclipping = game:GetService('RunService').Stepped:connect(NoclipLoop)
    else
      if Noclipping then
        Noclipping:Disconnect()
      end
    end
  end)

  character:AddButton("Reset", function()
    game:GetService("Players").LocalPlayer.Character.Humanoid.Health = 0;
  end)

  teleports:AddLabel(" -- Islands --")

  local dropdown3;
  dropdown3 = teleports:AddDropdown({"Ground" ,"Enchanted Island", "Astral Island", "Mystical Island", "Space Island", "Tundra Island", "Eternal Island", "Sandstorm", "Thunderstorm", "Ancient Inferno Island", "Midnight Shadow Island", "Mythical Souls Island", "Winter Wonder Island", "Golden Master Island", "Dragon Legend Island", "Cybernetic Legends Island", "Skystorm Ultraus Island"}, function(a)
  if a == "Ground" then
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-25.5, 0.94, 65.4)
    elseif a == "Enchanted Island" then
      game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.islandUnlockParts["Enchanted Island"].CFrame
    elseif a == "Astral Island" then
      game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.islandUnlockParts["Astral Island"].CFrame
    elseif a == "Mystical Island" then
      game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.islandUnlockParts["Mystical Island"].CFrame
    elseif a == "Space Island" then
      game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.islandUnlockParts["Space Island"].CFrame
    elseif a == "Tundra Island" then
      game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.islandUnlockParts["Tundra Island"].CFrame
    elseif a == "Eternal Island" then
      game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.islandUnlockParts["Eternal Island"].CFrame
    elseif a == "Sandstorm" then
      game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.islandUnlockParts["Sandstorm"].CFrame
    elseif a == "Thunderstorm" then
      game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.islandUnlockParts["Thunderstorm"].CFrame
    elseif a == "Ancient Inferno Island" then
      game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.islandUnlockParts["Ancient Inferno Island"].CFrame
    elseif a == "Midnight Shadow Island" then
      game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.islandUnlockParts["Midnight Shadow Island"].CFrame
    elseif a == "Mythical Souls Island" then
      game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.islandUnlockParts["Mythical Souls Island"].CFrame
    elseif a == "Winter Wonder Island" then
      game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.islandUnlockParts["Winter Wonder Island"].CFrame
    elseif a == "Golden Master Island" then
      game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.islandUnlockParts["Golden Master Island"].CFrame
    elseif a == "Dragon Legend Island" then
      game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.islandUnlockParts["Dragon Legend Island"].CFrame
    elseif a == "Cybernetic Legends Island" then
      game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.islandUnlockParts["Cybernetic Legends Island"].CFrame
    elseif a == "Skystorm Ultraus Island" then
      game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.islandUnlockParts["Skystorm Ultraus Island"].CFrame
    end
  end)

  teleports:AddLabel(" -- Shops --")

  local dropdown4;
  dropdown4 = teleports:AddDropdown({"Ground Shop", "Astral Shop", "Space Shop", "Tundra Shop", "Eternal Shop", "Sandstorm Shop", "Thunderstorm Shop", "Ancient Inferno Shop", "Midnight Shadow Shop", "Mythical Souls Shop", "Winter Wonder Shop", "Golden Master Shop", "Dragon Legend Shop", "Cybernetic Legends Shop", "Skystorm Ultraus Shop"}, function(a)
  if a == "Ground Shop" then
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.shopAreaCircles["shopAreaCircle"].circleInner.CFrame
  elseif a == "Astral Shop" then
      game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.shopAreaCircles["shopAreaCircle2"].circleInner.CFrame
    elseif a == "Space Shop" then
      game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.shopAreaCircles["shopAreaCircle3"].circleInner.CFrame
    elseif a == "Tundra Shop" then
      game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.shopAreaCircles["shopAreaCircle4"].circleInner.CFrame
    elseif a == "Eternal Shop" then
      game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.shopAreaCircles["shopAreaCircle5"].circleInner.CFrame
    elseif a == "Sandstorm Shop" then
      game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.shopAreaCircles["shopAreaCircle6"].circleInner.CFrame
    elseif a == "Thunderstorm Shop" then
      game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.shopAreaCircles["shopAreaCircle7"].circleInner.CFrame
    elseif a == "Ancient Inferno Shop" then
      game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.shopAreaCircles["shopAreaCircle8"].circleInner.CFrame
    elseif a == "Midnight Shadow Shop" then
      game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.shopAreaCircles["shopAreaCircle9"].circleInner.CFrame
    elseif a == "Mythical Souls Shop" then
      game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.shopAreaCircles["shopAreaCircle10"].circleInner.CFrame
    elseif a == "Winter Wonder Shop" then
      game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.shopAreaCircles["shopAreaCircle11"].circleInner.CFrame
    elseif a == "Golden Master Shop" then
      game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.shopAreaCircles["shopAreaCircle12"].circleInner.CFrame
    elseif a == "Dragon Legend Shop" then
      game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.shopAreaCircles["shopAreaCircle13"].circleInner.CFrame
    elseif a == "Cybernetic Legends Shop" then
      game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.shopAreaCircles["shopAreaCircle14"].circleInner.CFrame
    elseif a == "Skystorm Ultraus Shop" then
      game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.shopAreaCircles["shopAreaCircle15"].circleInner.CFrame
    end
  end)

  teleports:AddLabel("-- Evil Karma Areas --")

  local dropdown6;
  dropdown6 = teleports:AddDropdown({"Sword Of Anicents", "Fallen Infinity Blade", "Tornado", "Lava Pit"}, function(a)
    if a == "Sword Of Anicents" then
      game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(627.359, 82.206, 2429.487)
    elseif a == "Fallen Infinity Blade" then
      game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1875.967, 82.206, -6806.41)
    elseif a == "Tornado" then
      game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(330.128, 16921.822, -16.131)
    elseif a == "Lava Pit" then
      game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-119.522, 13002.264, 274.569)
    end
  end)

  teleports:AddLabel("-- Good Karma Areas --")

  local dropdown7;
  dropdown7 = teleports:AddDropdown({"Sword Of Legends", "Mystical Waters", "Zen Master's Blade", "Elemental Tornado"}, function(a)
    if a == "Sword Of Legends" then
      game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1848.478, 82.206, -137.431)
    elseif a == "Mystical Waters" then
      game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(354.478, 8874.264, 116.569)
    elseif a == "Zen Master's Blade" then
      game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(5041.177, 82.206, 1614.749)
    elseif a == "Elemental Tornado" then
      game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(330.128, 30432.824, -16.131)
    end
  end)

  teleports:AddButton("Unlock All Islands", function()
    local pos = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.islandUnlockParts["Enchanted Island"].CFrame
      wait(.3)
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.islandUnlockParts["Astral Island"].CFrame
      wait(.3)
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.islandUnlockParts["Mystical Island"].CFrame
      wait(.3)
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.islandUnlockParts["Space Island"].CFrame
      wait(.3)
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.islandUnlockParts["Tundra Island"].CFrame
      wait(.3)
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.islandUnlockParts["Eternal Island"].CFrame
      wait(.3)
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.islandUnlockParts["Sandstorm"].CFrame
      wait(.3)
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.islandUnlockParts["Thunderstorm"].CFrame
      wait(.3)
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.islandUnlockParts["Ancient Inferno Island"].CFrame
      wait(.3)
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.islandUnlockParts["Midnight Shadow Island"].CFrame
      wait(.3)
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.islandUnlockParts["Mythical Souls Island"].CFrame
      wait(.3)
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.islandUnlockParts["Winter Wonder Island"].CFrame
      wait(.3)
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.islandUnlockParts["Golden Master Island"].CFrame
      wait(.3)
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.islandUnlockParts["Dragon Legend Island"].CFrame
      wait(.3)
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.islandUnlockParts["Cybernetic Legends Island"].CFrame
      wait(.3)
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.islandUnlockParts["Skystorm Ultraus Island"].CFrame
      wait(.3)
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = pos
  end)

  teleports:AddButton("Evil Karma Chest", function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.evilKarmaChest.circleInner.CFrame
  end)

  teleports:AddButton("Good Karma Chest", function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.lightKarmaChest.circleInner.CFrame
  end)

  miscellaneous:AddLabel(" --Buy All Swords--")

  local dropdown;
  dropdown = miscellaneous:AddDropdown({"Buy all Swords Ground", "Buy all Swords Astral Island", "Buy all Swords Space Island", "Buy all Swords Tundra Island", "Buy all Swords Eternal Island", "Buy all Swords Sandstorm", "Buy all Swords Thunderstorm", "Buy all Swords Ancient Inferno Island", "Buy all Swords Midnight Shadow Island", "Buy all Swords Mythical Souls Island", "Buy all Swords Winter Wonder Island", "Buy all Swords Golden Master Island", "Buy all Swords Dragon Legend Island", "Buy all Swords Cybernetic Legends Island", "Buy all Swords Skystorm Ultraus Island"}, function(a)
    if a == "Buy all Swords Ground" then
      local tbl_main =
      {
            "buyAllSwords",
            "Ground"
      }
      game:GetService("Players").LocalPlayer.ninjaEvent:FireServer(unpack(tbl_main))
    elseif a == "Buy all Swords Astral Island" then
      local tbl_main =
      {
            "buyAllSwords",
            "Astral Island"
      }
      game:GetService("Players").LocalPlayer.ninjaEvent:FireServer(unpack(tbl_main))
    elseif a == "Buy all Swords Space Island" then
      local tbl_main =
      {
            "buyAllSwords",
            "Space Island"
      }
      game:GetService("Players").LocalPlayer.ninjaEvent:FireServer(unpack(tbl_main))
    elseif a == "Buy all Swords Tundra Island" then
      local tbl_main =
      {
            "buyAllSwords",
            "Tundra Island"
      }
      game:GetService("Players").LocalPlayer.ninjaEvent:FireServer(unpack(tbl_main))
    elseif a == "Buy all Swords Eternal Island" then
      local tbl_main =
      {
            "buyAllSwords",
            "Eternal Island"
      }
      game:GetService("Players").LocalPlayer.ninjaEvent:FireServer(unpack(tbl_main))
    elseif a == "Buy all Swords Sandstorm" then
      local tbl_main =
      {
            "buyAllSwords",
            "Sandstorm"
      }
      game:GetService("Players").LocalPlayer.ninjaEvent:FireServer(unpack(tbl_main))
    elseif a == "Buy all Swords Thunderstorm" then
      local tbl_main =
      {
            "buyAllSwords",
            "Thunderstorm"
      }
      game:GetService("Players").LocalPlayer.ninjaEvent:FireServer(unpack(tbl_main))
    elseif a == "Buy all Swords Ancient Inferno Island" then
      local tbl_main =
      {
            "buyAllSwords",
            "Ancient Inferno Island"
      }
      game:GetService("Players").LocalPlayer.ninjaEvent:FireServer(unpack(tbl_main))
    elseif a == "Buy all Swords Midnight Shadow Island" then
      local tbl_main =
      {
            "buyAllSwords",
            "Midnight Shadow Island"
      }
      game:GetService("Players").LocalPlayer.ninjaEvent:FireServer(unpack(tbl_main))
    elseif a == "Buy all Swords Mythical Souls Island" then
      local tbl_main =
      {
            "buyAllSwords",
            "Mythical Souls Island"
      }
      game:GetService("Players").LocalPlayer.ninjaEvent:FireServer(unpack(tbl_main))
    elseif a == "Buy all Swords Winter Wonder Island" then
      local tbl_main =
      {
            "buyAllSwords",
            "Winter Wonder Island"
      }
      game:GetService("Players").LocalPlayer.ninjaEvent:FireServer(unpack(tbl_main))
    elseif a == "Buy all Swords Golden Master Island" then
      local tbl_main =
      {
            "buyAllSwords",
            "Golden Master Island"
      }
      game:GetService("Players").LocalPlayer.ninjaEvent:FireServer(unpack(tbl_main))
    elseif a == "Buy all Swords Dragon Legend Island" then
      local tbl_main =
      {
            "buyAllSwords",
            "Dragon Legend Island"
      }
      game:GetService("Players").LocalPlayer.ninjaEvent:FireServer(unpack(tbl_main))
    elseif a == "Buy all Swords Cybernetic Legends Island" then
      local tbl_main =
      {
            "buyAllSwords",
            "Cybernetic Legends Island"
      }
      game:GetService("Players").LocalPlayer.ninjaEvent:FireServer(unpack(tbl_main))
    elseif a == "Buy all Swords Skystorm Ultraus Island" then
      local tbl_main =
      {
            "buyAllSwords",
            "Skystorm Ultraus Island"
      }
      game:GetService("Players").LocalPlayer.ninjaEvent:FireServer(unpack(tbl_main))
    end
  end)

  miscellaneous:AddLabel(" --Buy All Belts--")

  local dropdown2;
  dropdown2 = miscellaneous:AddDropdown({"Buy all Belts Ground", "Buy all Belts Astral Island", "Buy all Belts Space Island", "Buy all Belts Tundra Island", "Buy all Belts Eternal Island", "Buy all Belts Sandstorm", "Buy all Belts Thunderstorm", "Buy all Belts Ancient Inferno Island", "Buy all Belts Midnight Shadow Island", "Buy all Belts Mythical Souls Island", "Buy all Belts Winter Wonder Island", "Buy all Belts Golden Master Island", "Buy all Belts Dragon Legend Island", "Buy all Belts Cybernetic Legends Island", "Buy all Belts Skystorm Ultraus Island"}, function(a)
    if a == "Buy all Belts Ground" then
      local tbl_main =
      {
            "buyAllSwords",
            "Ground"
      }
      game:GetService("Players").LocalPlayer.ninjaEvent:FireServer(unpack(tbl_main))
    elseif a == "Buy all Belts Astral Island" then
      local tbl_main =
      {
            "buyAllBelts",
            "Astral Island"
      }
      game:GetService("Players").LocalPlayer.ninjaEvent:FireServer(unpack(tbl_main))
    elseif a == "Buy all Belts Space Island" then
      local tbl_main =
      {
            "buyAllBelts",
            "Space Island"
      }
      game:GetService("Players").LocalPlayer.ninjaEvent:FireServer(unpack(tbl_main))
    elseif a == "Buy all Belts Tundra Island" then
      local tbl_main =
      {
            "buyAllBelts",
            "Tundra Island"
      }
      game:GetService("Players").LocalPlayer.ninjaEvent:FireServer(unpack(tbl_main))
    elseif a == "Buy all Belts Eternal Island" then
      local tbl_main =
      {
            "buyAllBelts",
            "Eternal Island"
      }
      game:GetService("Players").LocalPlayer.ninjaEvent:FireServer(unpack(tbl_main))
    elseif a == "Buy all Belts Sandstorm" then
      local tbl_main =
      {
            "buyAllBelts",
            "Sandstorm"
      }
      game:GetService("Players").LocalPlayer.ninjaEvent:FireServer(unpack(tbl_main))
    elseif a == "Buy all Belts Thunderstorm" then
      local tbl_main =
      {
            "buyAllBelts",
            "Thunderstorm"
      }
      game:GetService("Players").LocalPlayer.ninjaEvent:FireServer(unpack(tbl_main))
    elseif a == "Buy all Belts Ancient Inferno Island" then
      local tbl_main =
      {
            "buyAllBelts",
            "Ancient Inferno Island"
      }
      game:GetService("Players").LocalPlayer.ninjaEvent:FireServer(unpack(tbl_main))
    elseif a == "Buy all Belts Midnight Shadow Island" then
      local tbl_main =
      {
            "buyAllBelts",
            "Midnight Shadow Island"
      }
      game:GetService("Players").LocalPlayer.ninjaEvent:FireServer(unpack(tbl_main))
    elseif a == "Buy all Belts Mythical Souls Island" then
      local tbl_main =
      {
            "buyAllBelts",
            "Mythical Souls Island"
      }
      game:GetService("Players").LocalPlayer.ninjaEvent:FireServer(unpack(tbl_main))
    elseif a == "Buy all Belts Winter Wonder Island" then
      local tbl_main =
      {
            "buyAllBelts",
            "Winter Wonder Island"
      }
      game:GetService("Players").LocalPlayer.ninjaEvent:FireServer(unpack(tbl_main))
    elseif a == "Buy all Belts Golden Master Island" then
      local tbl_main =
      {
            "buyAllBelts",
            "Golden Master Island"
      }
      game:GetService("Players").LocalPlayer.ninjaEvent:FireServer(unpack(tbl_main))
    elseif a == "Buy all Belts Dragon Legend Island" then
      local tbl_main =
      {
            "buyAllBelts",
            "Dragon Legend Island"
      }
      game:GetService("Players").LocalPlayer.ninjaEvent:FireServer(unpack(tbl_main))
    elseif a == "Buy all Belts Cybernetic Legends Island" then
      local tbl_main =
      {
            "buyAllBelts",
            "Cybernetic Legends Island"
      }
      game:GetService("Players").LocalPlayer.ninjaEvent:FireServer(unpack(tbl_main))
    elseif a == "Buy all Belts Skystorm Ultraus Island" then
      local tbl_main =
      {
            "buyAllBelts",
            "Skystorm Ultraus Island"
      }
      game:GetService("Players").LocalPlayer.ninjaEvent:FireServer(unpack(tbl_main))
    end
  end)

  miscellaneous:AddToggle("Auto Collect Souls", function(state)
    if settings.autocollectsouls == false then
      settings.autocollectsouls = true
      workspace.soulPartsFolder.ChildAdded:Connect(function()
        if settings.autocollectsouls then
        	local args = {
        		[1] = "collectSoul",
        		[2] = workspace.soulPartsFolder.soulPart,
        	}
        	game.Players.LocalPlayer.ninjaEvent:FireServer(unpack(args))
        end
      end)
    else
      settings.autocollectsouls = false
    end
  end)

  miscellaneous:AddToggle("Auto Buy Swords", function(state)
    if settings.autobuysword == false then
      settings.autobuysword = true
      while wait() do
        local tbl_main =
        {
              "buyAllSwords",
              "Skystorm Ultraus Island"
        }
        game:GetService("Players").LocalPlayer.ninjaEvent:FireServer(unpack(tbl_main))
        if settings.autobuysword == false then
          break
        end
      end
    else
      settings.autobuysword = false
    end
  end)

  miscellaneous:AddToggle("Auto Buy Belts", function(state)
    if settings.autobuybelts == false then
      settings.autobuybelts = true
      while wait() do
        local tbl_main =
        {
              "buyAllBelts",
              "Skystorm Ultraus Island"
        }
        game:GetService("Players").LocalPlayer.ninjaEvent:FireServer(unpack(tbl_main))
        if settings.autobuybelts == false then
          break
        end
      end
    else
      settings.autobuybelts = false
    end
  end)

  miscellaneous:AddToggle("Chatlogs", function(state)
    if state then
      game.CoreGui.UILibrary.chatlogs:TweenPosition(UDim2.new(0.035, 0,0.65, 0), "Out", "Linear", .3, true)
    else
      game.CoreGui.UILibrary.chatlogs:TweenPosition(UDim2.new(0.71, 0,0.997, 0), "Out", "Linear", .3, true)
    end
  end)

  miscellaneous:AddButton("Buy all possible skills", function()
    local tbl_main =
    {
          "buyAllSkills",
          "Cybernetic Legends Island"
    }
    game:GetService("Players").LocalPlayer.ninjaEvent:FireServer(unpack(tbl_main))
  end)

  miscellaneous:AddButton3("Toggle Fly Key; ' '",function()
  	game.CoreGui.UILibrary.Miscellaneous.Container.TextButton3.Text = 'Press any Key now'
  	local input = UserInput.InputBegan:wait()
  	if input.UserInputType == Enum.UserInputType.Keyboard then
  		settings.flykey = tostring(input.KeyCode)
  		game.CoreGui.UILibrary.Miscellaneous.Container.TextButton3.Text = "Toggle Fly Key; '"..string.sub(tostring(input.KeyCode), 14).."'"
  	else
  		settings.flykey = tostring(input.UserInputType)
  		game.CoreGui.UILibrary.Miscellaneous.Container.TextButton3.Text = "Toggle Fly Key; '"..string.sub(tostring(input.UserInputType), 20).."'"
  	end
  end)

  function Time()
  	local HOUR = math.floor((tick() % 86400) / 3600)
  	local MINUTE = math.floor((tick() % 3600) / 60)
  	local SECOND = math.floor(tick() % 60)
  	local AP = HOUR > 11 and 'PM' or 'AM'
  	HOUR = (HOUR % 12 == 0 and 12 or HOUR % 12)
  	HOUR = HOUR < 10 and '0' .. HOUR or HOUR
  	MINUTE = MINUTE < 10 and '0' .. MINUTE or MINUTE
  	SECOND = SECOND < 10 and '0' .. SECOND or SECOND
  	return HOUR .. ':' .. MINUTE .. ':' .. SECOND .. ' ' .. AP
  end

  function CreateLabel(Name, Text)
  	if #game.CoreGui.UILibrary.chatlogs.logpannel.main:GetChildren() >= 2546 then
  		game.CoreGui.UILibrary.chatlogs.logpannel.main:ClearAllChildren()
  	end
  	local alls = 0
  	for i,v in pairs(game.CoreGui.UILibrary.chatlogs.logpannel.main:GetChildren()) do
  		if v then
  			alls = v.Size.Y.Offset + alls
  		end
  		if not v then
  			alls = 0
  		end
  	end
  	local tl = Instance.new('TextLabel', game.CoreGui.UILibrary.chatlogs.logpannel.main)
  	local il = Instance.new('Frame', tl)
  	tl.Name = Name
  	tl.ZIndex = 10
  	tl.Text = Time().." - ["..Name.."]: "..Text
  	tl.Size = UDim2.new(0,322,0,84)
  	tl.BackgroundTransparency = 1
  	tl.BorderSizePixel = 0
  	tl.Font = "SourceSans"
  	tl.Position = UDim2.new(-1,0,0,alls)
  	tl.TextTransparency = 1
  	tl.TextScaled = false
  	tl.TextSize = 14
  	tl.TextWrapped = true
  	tl.TextXAlignment = "Left"
  	tl.TextYAlignment = "Top"
  	il.BackgroundTransparency = 1
  	il.BorderSizePixel = 0
  	il.Size = UDim2.new(0,12,1,0)
  	il.Position = UDim2.new(0,316,0,0)
  	il.ZIndex = 10
  	tl.TextColor3 = Color3.fromRGB(255,255,255)
  	tl.Size = UDim2.new(0,322,0,tl.TextBounds.Y)
  	game.CoreGui.UILibrary.chatlogs.logpannel.main.CanvasPosition = Vector2.new(0,game.CoreGui.UILibrary.chatlogs.logpannel.main.CanvasPosition.Y+tl.TextBounds.Y)
  	local size2 = game.CoreGui.UILibrary.chatlogs.logpannel.main.CanvasSize.Y.Offset
  	tl:TweenPosition(UDim2.new(0,3,0,alls), 'In', 'Quint', 0.5)
  	for i = 0,50 do wait(0.05)
  		tl.TextTransparency = tl.TextTransparency - 0.05
  	end
  	tl.TextTransparency = 0
  end

  function writefileExploit()
  	if writefile then
  		return true
  	end
  end

  local cooldown = false
  function writefileCooldown(name,data)
  	spawn(function()
  		if not cooldown then
  			cooldown = true
  			writefile(name, data)
  		else
  			repeat wait() until cooldown == false
  			writefileCooldown(name,data)
  		end
  		wait(3)
  		cooldown = false
  	end)
  end

  ChatLog = function(plr)
  	plr.Chatted:Connect(function(Message)
  		if settings.logs == true then
  			CreateLabel(plr.Name,Message)
  		end
  	end)
  end

  game.CoreGui.UILibrary.chatlogs.buttons.enable.MouseButton1Down:connect(function()
  	if settings.logs then
  		settings.logs = false
  		game.CoreGui.UILibrary.chatlogs.buttons.enable.Text = 'Disabled'
  	else
  		settings.logs = true
  		game.CoreGui.UILibrary.chatlogs.buttons.enable.Text = 'Enabled'
  	end
  end)

  game.CoreGui.UILibrary.chatlogs.buttons.clear.MouseButton1Down:connect(function()
  	for _, child in pairs(game.CoreGui.UILibrary.chatlogs.logpannel.main:GetChildren()) do
  		child:Destroy()
  	end
  end)

  game.CoreGui.UILibrary.chatlogs.buttons.save.MouseButton1Down:connect(function()
    if writefileExploit() then
      if #game.CoreGui.UILibrary.chatlogs.logpannel.main:GetChildren() > 0 then
        local placeName = game:GetService('MarketplaceService'):GetProductInfo(game.PlaceId).Name
        local writelogs = '-- Epic Hakor Man Chatlogs For "'..placeName..'"\n'
        for _, child in pairs(game.CoreGui.UILibrary.chatlogs.logpannel.main:GetChildren()) do
          writelogs = writelogs..'\n'..child.Text
        end
        local writelogsFile = tostring(writelogs)
        local fileext = 0
        local function nameFile()
          local file
          pcall(function() file = readfile(placeName..' Chat Logs ('..fileext..').txt') end)
          if file then
            fileext = fileext+1
            nameFile()
          else
            writefileCooldown(placeName..' Chat Logs ('..fileext..').txt', writelogsFile)
          end
        end
        nameFile()
      end
    else
    end
  end)

  for _, plr in pairs(game.Players:GetChildren()) do
  	if plr.ClassName == "Player" then
  		ChatLog(plr)
  	end
  end

  game.Players.PlayerAdded:Connect(function(plr)
    ChatLog(plr)
  end)

  miscellaneous:AddButton2("Toggle UI Key; ' '",function()
  	game.CoreGui.UILibrary.Miscellaneous.Container.TextButton2.Text = 'Press any Key now'
  	local input = UserInput.InputBegan:wait()
  	if input.UserInputType == Enum.UserInputType.Keyboard then
  		settings.togglekey = tostring(input.KeyCode)
  		game.CoreGui.UILibrary.Miscellaneous.Container.TextButton2.Text = "Toggle UI Key; '"..string.sub(tostring(input.KeyCode), 14).."'"
  	else
  		settings.togglekey = tostring(input.UserInputType)
  		game.CoreGui.UILibrary.Miscellaneous.Container.TextButton2.Text = "Toggle UI Key; '"..string.sub(tostring(input.UserInputType), 20).."'"
  	end
  end)

  miscellaneous:AddButton("Rejoin", function()
    game:GetService('TeleportService'):Teleport(game.PlaceId)
  end)

  pets:AddLabel("-- Sell --")

  pets:AddToggle("AutoSell All Basic", function()
    if settings.autosellbasic == false then
      settings.autosellbasic= true
      while wait() do
      local args = {
          [1] = "sellPet",
          [2] = game.Players.LocalPlayer.petsFolder.Basic:FindFirstChildOfClass("StringValue"),
      }
      game:GetService("ReplicatedStorage").rEvents.sellPetEvent:FireServer(unpack(args))
        if settings.autosellbasic == false then
          break
        end
      end
    else
      settings.autosellbasic = false
    end
  end)

  pets:AddToggle("AutoSell All Advanced", function()
    if settings.autoselladvanced == false then
      settings.autoselladvanced= true
      while wait() do
      local args = {
          [1] = "sellPet",
          [2] = game.Players.LocalPlayer.petsFolder.Advanced:FindFirstChildOfClass("StringValue"),
      }
      game:GetService("ReplicatedStorage").rEvents.sellPetEvent:FireServer(unpack(args))
        if settings.autoselladvanced == false then
          break
        end
      end
    else
      settings.autoselladvanced = false
    end
  end)

  pets:AddToggle("AutoSell All Rare", function()
    if settings.autosellrare == false then
      settings.autosellrare= true
      while wait() do
      local args = {
          [1] = "sellPet",
          [2] = game.Players.LocalPlayer.petsFolder.Rare:FindFirstChildOfClass("StringValue"),
      }
      game:GetService("ReplicatedStorage").rEvents.sellPetEvent:FireServer(unpack(args))
        if settings.autosellrare == false then
          break
        end
      end
    else
      settings.autosellrare = false
    end
  end)

  pets:AddToggle("AutoSell All Epic", function()
    if settings.autosellepic == false then
      settings.autosellepic= true
      while wait() do
      local args = {
          [1] = "sellPet",
          [2] = game.Players.LocalPlayer.petsFolder.Epic:FindFirstChildOfClass("StringValue"),
      }
      game:GetService("ReplicatedStorage").rEvents.sellPetEvent:FireServer(unpack(args))
        if settings.autosellepic == false then
          break
        end
      end
    else
      settings.autosellepic = false
    end
  end)

  pets:AddToggle("AutoSell All Unique", function()
    if settings.autosellunique == false then
      settings.autosellunique= true
      while wait() do
      local args = {
          [1] = "sellPet",
          [2] = game.Players.LocalPlayer.petsFolder.Unique:FindFirstChildOfClass("StringValue"),
      }
      game:GetService("ReplicatedStorage").rEvents.sellPetEvent:FireServer(unpack(args))
        if settings.autosellunique == false then
          break
        end
      end
    else
      settings.autosellunique = false
    end
  end)

  pets:AddToggle("Sell All Omega", function()
    if settings.autosellomega == false then
      settings.autosellomega = true
      while wait() do
      local args = {
          [1] = "sellPet",
          [2] = game.Players.LocalPlayer.petsFolder.Omega:FindFirstChildOfClass("StringValue"),
      }
      game:GetService("ReplicatedStorage").rEvents.sellPetEvent:FireServer(unpack(args))
        if settings.autosellomega == false then
          break
        end
      end
    else
      settings.autosellomega = false
    end
  end)

  pets:AddToggle("AutoSell All Elite", function()
    if settings.autosellelite == false then
      settings.autosellelite = true
      while wait() do
      local args = {
          [1] = "sellPet",
          [2] = game.Players.LocalPlayer.petsFolder.Elite:FindFirstChildOfClass("StringValue"),
      }
      game:GetService("ReplicatedStorage").rEvents.sellPetEvent:FireServer(unpack(args))
        if settings.autosellelite == false then
          break
        end
      end
    else
      settings.autosellelite = false
    end
  end)

  pets:AddToggle("AutoSell All Skystorm", function()
    if settings.autosellskystorm == false then
      settings.autosellskystorm = true
      while wait() do
      local args = {
          [1] = "sellPet",
          [2] = game.Players.LocalPlayer.petsFolder.Skystorm:FindFirstChildOfClass("StringValue"),
      }
      game:GetService("ReplicatedStorage").rEvents.sellPetEvent:FireServer(unpack(args))
        if settings.autosellskystorm == false then
          break
        end
      end
    else
      settings.autosellskystorm = false
    end
  end)

  pets:AddToggle("AutoSell All Awakened", function()
    if settings.autosellawakened == false then
      settings.autosellawakened = true
      while wait() do
      local args = {
          [1] = "sellPet",
          [2] = game.Players.LocalPlayer.petsFolder.Awakened:FindFirstChildOfClass("StringValue"),
      }
      game:GetService("ReplicatedStorage").rEvents.sellPetEvent:FireServer(unpack(args))
        if settings.autosellawakened == false then
          break
        end
      end
    else
      settings.autosellawakened = false
    end
  end)

  pets:AddToggle("AutoSell All Infinity", function()
    if settings.autosellinfinity == false then
      settings.autosellinfinity = true
      while wait() do
      local args = {
          [1] = "sellPet",
          [2] = game.Players.LocalPlayer.petsFolder.Infinity:FindFirstChildOfClass("StringValue"),
      }

      game:GetService("ReplicatedStorage").rEvents.sellPetEvent:FireServer(unpack(args))
      if settings.autosellinfinity == false then
        break
      end
      end
    else
      settings.autosellinfinity = false
    end
  end)

  pets:AddToggle("AutoSell All BEAST", function()
    if settings.autosellbeast == false then
      settings.autosellbeast = true
      while wait() do
      local args = {
          [1] = "sellPet",
          [2] = game.Players.LocalPlayer.petsFolder.BEAST:FindFirstChildOfClass("StringValue"),
      }

      game:GetService("ReplicatedStorage").rEvents.sellPetEvent:FireServer(unpack(args))
      if settings.autosellbeast == false then
        break
      end
      end
      settings.autosellbeast = false
    end
  end)

  pets:AddLabel("-- Clone --")

  pets:AddToggle("AutoClone All Basic", function()
    if settings.autoclonebasic == false then
      settings.autoclonebasic= true
      while wait() do
      local args = {
          [1] = "clonePet",
          [2] = game.Players.LocalPlayer.petsFolder.Basic:FindFirstChildOfClass("StringValue"),
      }
      game:GetService("ReplicatedStorage").rEvents.petCloneEvent:FireServer(unpack(args))
        if settings.autoclonebasic == false then
          break
        end
      end
    else
      settings.autoclonebasic = false
    end
  end)

  pets:AddToggle("AutoClone All Advanced", function()
    if settings.autocloneadvanced == false then
      settings.autocloneadvanced= true
      while wait() do
      local args = {
          [1] = "clonePet",
          [2] = game.Players.LocalPlayer.petsFolder.Advanced:FindFirstChildOfClass("StringValue"),
      }
      game:GetService("ReplicatedStorage").rEvents.petCloneEvent:FireServer(unpack(args))
        if settings.autocloneadvanced == false then
          break
        end
      end
    else
      settings.autocloneadvanced = false
    end
  end)

  pets:AddToggle("AutoClone All Rare", function()
    if settings.autoclonerare == false then
      settings.autoclonerare= true
      while wait() do
      local args = {
          [1] = "clonePet",
          [2] = game.Players.LocalPlayer.petsFolder.Rare:FindFirstChildOfClass("StringValue"),
      }
      game:GetService("ReplicatedStorage").rEvents.petCloneEvent:FireServer(unpack(args))
        if settings.autoclonerare == false then
          break
        end
      end
    else
      settings.autoclonerare = false
    end
  end)

  pets:AddToggle("AutoClone All Epic", function()
    if settings.autocloneepic == false then
      settings.autocloneepic= true
      while wait() do
      local args = {
          [1] = "clonePet",
          [2] = game.Players.LocalPlayer.petsFolder.Epic:FindFirstChildOfClass("StringValue"),
      }
      game:GetService("ReplicatedStorage").rEvents.petCloneEvent:FireServer(unpack(args))
        if settings.autocloneepic == false then
          break
        end
      end
    else
      settings.autocloneepic = false
    end
  end)

  pets:AddToggle("AutoClone All Unique", function()
    if settings.autocloneunique == false then
      settings.autocloneunique= true
      while wait() do
      local args = {
          [1] = "clonePet",
          [2] = game.Players.LocalPlayer.petsFolder.Unique:FindFirstChildOfClass("StringValue"),
      }
      game:GetService("ReplicatedStorage").rEvents.petCloneEvent:FireServer(unpack(args))
        if settings.autocloneunique == false then
          break
        end
      end
    else
      settings.autocloneunique = false
    end
  end)

  pets:AddToggle("Sell All Omega", function()
    if settings.autocloneomega == false then
      settings.autocloneomega = true
      while wait() do
      local args = {
          [1] = "clonePet",
          [2] = game.Players.LocalPlayer.petsFolder.Omega:FindFirstChildOfClass("StringValue"),
      }
      game:GetService("ReplicatedStorage").rEvents.petCloneEvent:FireServer(unpack(args))
        if settings.autocloneomega == false then
          break
        end
      end
    else
      settings.autocloneomega = false
    end
  end)

  pets:AddToggle("AutoClone All Elite", function()
    if settings.autocloneelite == false then
      settings.autocloneelite = true
      while wait() do
      local args = {
          [1] = "clonePet",
          [2] = game.Players.LocalPlayer.petsFolder.Elite:FindFirstChildOfClass("StringValue"),
      }
      game:GetService("ReplicatedStorage").rEvents.petCloneEvent:FireServer(unpack(args))
        if settings.autocloneelite == false then
          break
        end
      end
    else
      settings.autocloneelite = false
    end
  end)

  pets:AddToggle("AutoClone All Skystorm", function()
    if settings.autocloneskystorm == false then
      settings.autocloneskystorm = true
      while wait() do
      local args = {
          [1] = "clonePet",
          [2] = game.Players.LocalPlayer.petsFolder.Skystorm:FindFirstChildOfClass("StringValue"),
      }
      game:GetService("ReplicatedStorage").rEvents.petCloneEvent:FireServer(unpack(args))
        if settings.autocloneskystorm == false then
          break
        end
      end
    else
      settings.autocloneskystorm = false
    end
  end)

  pets:AddToggle("AutoClone All Awakened", function()
    if settings.autocloneawakened == false then
      settings.autocloneawakened = true
      while wait() do
      local args = {
          [1] = "clonePet",
          [2] = game.Players.LocalPlayer.petsFolder.Awakened:FindFirstChildOfClass("StringValue"),
      }
      game:GetService("ReplicatedStorage").rEvents.petCloneEvent:FireServer(unpack(args))
        if settings.autocloneawakened == false then
          break
        end
      end
    else
      settings.autocloneawakened = false
    end
  end)

  pets:AddToggle("AutoClone All Infinity", function()
    if settings.autocloneinfinity == false then
      settings.autocloneinfinity = true
      while wait() do
      local args = {
          [1] = "clonePet",
          [2] = game.Players.LocalPlayer.petsFolder.Infinity:FindFirstChildOfClass("StringValue"),
      }

      game:GetService("ReplicatedStorage").rEvents.petCloneEvent:FireServer(unpack(args))
      if settings.autocloneinfinity == false then
        break
      end
      end
    else
      settings.autocloneinfinity = false
    end
  end)

  pets:AddToggle("AutoClone All BEAST", function()
    if settings.autoclonebeast == false then
      settings.autoclonebeast = true
      while wait() do
      local args = {
          [1] = "clonePet",
          [2] = game.Players.LocalPlayer.petsFolder.BEAST:FindFirstChildOfClass("StringValue"),
      }

      game:GetService("ReplicatedStorage").rEvents.petCloneEvent:FireServer(unpack(args))
      if settings.autoclonebeast == false then
        break
      end
      end
      settings.autoclonebeast = false
    end
  end)

  pets:AddToggle("Auto Evolve Pets", function()
    if settings.autoevolve == false then
      settings.autoevolve = true
      while wait() do
        local args = {
            [1] = "autoEvolvePets",
        }
        game:GetService("ReplicatedStorage").rEvents.autoEvolveRemote:InvokeServer(unpack(args))
        if settings.autoevolve == false then
          break
        end
      end
    else
      settings.autoevolve = false
    end
  end)

  local dropdown4;
  dropdown4 = pets:AddDropdown2({"Open Astral Crystal", "Open Blue Crystal", "Open Enchanted Crystal", "Open Eternal Crystal", "Open Frozen Crystal", "Open Galaxy Crystal", "Open Golden Crystal", "Open Inferno Crystal", "Open Master Secrets Crystal", "Open Midnight Chaos Crystal", "Open Purple Crystal", "Open Storm Crystal", "Open Thunder Crystal"}, function(a)
  end)

  pets:AddToggle("Open Eggs", function()
    local a = game.CoreGui.UILibrary["Pet Cheats"].Container.TextLabel2.Text
    if settings.openeggs == false then
      settings.openeggs = true
      while wait() do
        if game.CoreGui.UILibrary["Pet Cheats"].Container.TextLabel2.Text == "Open Astral Crystal" then
          local args = {
              [1] = "openCrystal",
              [2] = "Astral Crystal",
          }
          game:GetService("ReplicatedStorage").rEvents.openCrystalRemote:InvokeServer(unpack(args))
        elseif a == "Open Blue Crystal" then
          local args = {
              [1] = "openCrystal",
              [2] = "Blue Crystal",
          }
          game:GetService("ReplicatedStorage").rEvents.openCrystalRemote:InvokeServer(unpack(args))
        elseif a == "Open Enchanted Crystal" then
          local args = {
              [1] = "openCrystal",
              [2] = "Enchanted Crystal",
          }
          game:GetService("ReplicatedStorage").rEvents.openCrystalRemote:InvokeServer(unpack(args))
        elseif a == "Open Eternal Crystal" then
          local args = {
              [1] = "openCrystal",
              [2] = "Eternal Crystal",
          }
          game:GetService("ReplicatedStorage").rEvents.openCrystalRemote:InvokeServer(unpack(args))
        elseif a == "Open Frozen Crystal" then
          local args = {
              [1] = "openCrystal",
              [2] = "Frozen Crystal",
          }
          game:GetService("ReplicatedStorage").rEvents.openCrystalRemote:InvokeServer(unpack(args))
        elseif a == "Open Galaxy Crystal" then
          local args = {
              [1] = "openCrystal",
              [2] = "Galaxy Crystal",
          }
          game:GetService("ReplicatedStorage").rEvents.openCrystalRemote:InvokeServer(unpack(args))
        elseif a == "Open Golden Crystal" then
          local args = {
              [1] = "openCrystal",
              [2] = "Golden Crystal",
          }
          game:GetService("ReplicatedStorage").rEvents.openCrystalRemote:InvokeServer(unpack(args))
        elseif a == "Open Inferno Crystal" then
          local args = {
              [1] = "openCrystal",
              [2] = "Inferno Crystal",
          }
          game:GetService("ReplicatedStorage").rEvents.openCrystalRemote:InvokeServer(unpack(args))
        elseif a == "Open Master Secrets Crystal" then
          local args = {
              [1] = "openCrystal",
              [2] = "Master Secrets Crystal",
          }
          game:GetService("ReplicatedStorage").rEvents.openCrystalRemote:InvokeServer(unpack(args))
        elseif a == "Open Midnight Chaos Crystal" then
          local args = {
              [1] = "openCrystal",
              [2] = "Midnight Chaos Crystal",
          }
          game:GetService("ReplicatedStorage").rEvents.openCrystalRemote:InvokeServer(unpack(args))
        elseif a == "Open Purple Crystal" then
          local args = {
              [1] = "openCrystal",
              [2] = "Purple Crystal",
          }
          game:GetService("ReplicatedStorage").rEvents.openCrystalRemote:InvokeServer(unpack(args))
        elseif a == "Open Storm Crystal" then
          local args = {
              [1] = "openCrystal",
              [2] = "Storm Crystal",
          }
          game:GetService("ReplicatedStorage").rEvents.openCrystalRemote:InvokeServer(unpack(args))
        elseif a == "Open Thunder Crystal" then
          local args = {
              [1] = "openCrystal",
              [2] = "Thunder Crystal",
          }
          game:GetService("ReplicatedStorage").rEvents.openCrystalRemote:InvokeServer(unpack(args))
        end
        if settings.openeggs == false then
          break
        end
      end
    else
      settings.openeggs = false
    end
  end)

  local vu = game:GetService("VirtualUser")
  game:GetService("Players").LocalPlayer.Idled:connect(function()
      vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
      wait(1)
      vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
  end)

  changelog:AddLabel("V2.3 ( CURRENT VERSION )\n + Added Fly + Noclip\n + Added Fly Hotkey\n+ Added Evil/Good Karma Areas\n + Added Pets Tab\n + Added Auto Buy Swords/Belts\nV1.6\n + Added Remove Coin effect shit\n + Added Collect All chests\n + Added Buy possible skills\n + Added Chatlogs\nV1.3\n + Released UI\n + Added Teleports Tab\nV1\n + Created UI")

  UserInput.InputBegan:Connect(function(input)
    if tostring(input.KeyCode) == settings.togglekey or tostring(input.UserInputType) == settings.togglekey then
      if settings.vis == true then
        settings.vis = false
        for _,v in ipairs(game.CoreGui.UILibrary:GetDescendants()) do
          if v:IsA("Frame") then
                v.Visible = false
             end
           end
      elseif settings.vis == false then
        settings.vis = true
        for _,v in ipairs(game.CoreGui.UILibrary:GetDescendants()) do
          if v:IsA("Frame") then
                v.Visible = true
             end
           end
         end
       elseif tostring(input.KeyCode) == settings.flykey or tostring(input.UserInputType) == settings.flykey then
          if settings.vfly == false then
            settings.vfly = true
            sFLY()
          else
            settings.vfly = true
            NOFLY()
          end
      end
  end)
end
